<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Backbtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        mwAAA5sBPN8HMQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQ6SURBVGhD7ZpJ
        axRBGIbjlqi4JW5B0KtKQMRf4ApqMEZcDh68KbiAingUFPQgeFDUk+B/UFwOeggkoNEExX3BBfUgbiC4
        olg+b/dXdkwmnZ6Z7p5MyAMvhPerqq861V1V3TU1wwxVnHMNaCM6ha6gl+hTL71Aip1EG1C9Va8sdKQW
        bUKX0W9ULKpzEekfMMaazQ+Sjkf70Gvk+YU60EG0Ds1F9b0kT7FDSGVVx/MK7UXjLE22kKgV6bbxXEdb
        UYMVSQx1pqJtqBN5nqMWK5I+NK5ROKtMhi5gsYXLhraWoptq2DiD0h0dGmxEt9U6fEE70EgLp4baRLvQ
        VyS60UwLlwcNzUFP1SrcQ/MtlBnkaEIPlRAeo9kWKg0a0EXoIRRX0QQLZQ65JqN2JYZnaJaFioOKY5GG
        Vuh5mGih3FBOdEMdAD0/dRZKDpVOB9XDIZ5qdu6Qezp6oo7ACbOTQYWVYb3goWsyu2LQhwXoG/qDlpsd
        DwXHId2TYqfZFYe+7A67FIzOWLP7h0L7g+LhPTnK7IqjvqBb6hjsMbswFJiAPgRFnVti9qCBPq0Iu+be
        ovFm94XglqCYc11mFQX1ZiLtodrNShXaHYH8qGw2uy8EtcUW28xKDHVmIC2YoqR/RBJoe3uYwl0y638I
        6H1C2+ofaIrZiaC8LuIuEvdROtuKAtC2Npo/kXbOk8yOwFyPxFWzEkH5WUjbCNGFMn9ZIkdbkM25tWZF
        YB4LY+6AWQNCWS1WfiS0cDZaKFPIo3cecdSsCEy95Yk1ZsVCuZ4jcQdNt1DmkEvvROKCWRGYfoc7z6x+
        oYxGQp0XWqBK29CVCPm0OxaPzIrA/BjG4t/0iGskHgUlw1lqhoVyg5zTguzOvTcrAlMzgag1qw/ENI/7
        ZyJLOixlQYhrZy6+mxWB6S+k368ZxHQh/pbKkmuWsiDE68Ji7odZEZhJby299j4ISub8kHvI6W+td2ZF
        YBbzsFf0YsgX+7BfCGOu1axYKKfvVFoAhabh3GYucvnF+5xZEZilLIjaJGpLIjQJ5DKDkSd2QWwJY67N
        rERQXiPjv0flMjLk0A5bNJsVgVnOpjG3kaHt+E2jIFDONr7nxXSbnTq0Hb+NFwTTeLHSLNZpVqrQbuIX
        Ky00b4Jizq0ye9BAn9aEXQs+oscfQ1Cg+j8+CAoNjc9BgoLV/4HOQ4Xq/2QqqDQ0PmILKmrx8WuDXqLK
        O6coAnLpSMPn1iFTUYt0H2ig50GPJoGFFsoMcixCOsoW5R/0eGio59GbHjodj422cGqoTaTZ6TsS6R29
        eWhQ07IO+jVzCO2pEn1xGQja0YqtTau/lZTjOEo2zZYCjS9D/lYTegjLPZ727zVCM1Q+H9BJpNFJ8oOB
        fw+o/jZvoB8MZDcK/UHS6v4JRyHoiE5hm9ERdB5p1vmMPPpbv2pQ7DBajQq/TwxT9dTU/AWjvCC1Uu7N
        dwAAAABJRU5ErkJggg==
</value>
  </data>
</root>